<?xml version="1.0" encoding="ASCII"?>
<intermediate:IntermediateServiceModel
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:intermediate="http://www.fhdo.de/lemma/service/intermediate"
    xmlns:intermediate_1="http://www.fhdo.de/lemma/data/intermediate"
    sourceModelUri="file:///OrderMappingAlternative/Order.services">
  <imports name="OrderDomain"
      importUri="file:///intermediate/data models/Order.xmi"
      importTypeName="DATATYPES"/>
  <imports name="Common"
      importUri="file:///intermediate/data models/Common.xmi"
      importTypeName="DATATYPES"/>
  <imports name="RestaurantDomain"
      importUri="file:///intermediate/data models/Restaurant.xmi"
      importTypeName="DATATYPES"/>
  <microservices
      sourceModelUri="file:///OrderMappingAlternative/Order.services"
      name="org.example.OrderService"
      qualifiedName="org.example.OrderService"
      type="FUNCTIONAL"
      visibility="ARCHITECTURE"
      effectivelyImplemented="true">
    <interfaces
        name="Orders"
        qualifiedName="org.example.OrderService.Orders"
        visibility="ARCHITECTURE"
        hasImplementedOperations="true">
      <operations
          name="create"
          qualifiedName="org.example.OrderService.Orders.create"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Create order">
          <parameterComments
              comment="Request"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.0/@parameters.0"/>
        </apiOperationComment>
        <parameters
            name="request"
            qualifiedName="org.example.OrderService.Orders.create.request"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderRequest"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderRequest"
              import="//@imports.0"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderRequest"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderRequest"
              import="//@imports.0"/>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.create.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderResponse"
              import="//@imports.0"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderResponse"
              import="//@imports.0"/>
        </parameters>
      </operations>
      <operations
          name="getOrder"
          qualifiedName="org.example.OrderService.Orders.getOrder"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Get order">
          <parameterComments
              comment="ID of the order to retrieve"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.1/@parameters.0"/>
        </apiOperationComment>
        <parameters
            name="orderId"
            qualifiedName="org.example.OrderService.Orders.getOrder.orderId"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.getOrder.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.0"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.0"/>
        </parameters>
      </operations>
      <operations
          name="cancel"
          qualifiedName="org.example.OrderService.Orders.cancel"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Cancel order">
          <parameterComments
              comment="ID of the order to cancel"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.2/@parameters.0"/>
        </apiOperationComment>
        <parameters
            name="orderId"
            qualifiedName="org.example.OrderService.Orders.cancel.orderId"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.cancel.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.0"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.0"/>
        </parameters>
        <parameters
            name="notFound"
            qualifiedName="org.example.OrderService.Orders.cancel.notFound"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS"
            communicatesFault="true">
          <type
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="int"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="32"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="int"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="32"/>
        </parameters>
      </operations>
    </interfaces>
    <interfaces
        name="OrderEventConsumer"
        qualifiedName="org.example.OrderService.OrderEventConsumer"
        visibility="ARCHITECTURE"
        hasImplementedOperations="true">
      <operations
          name="listenCreateMenu"
          qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Listen for a menu to be created">
          <parameterComments
              comment="Menu was created (uses RestaurantCreated as its envelope to also get the name of the restaurant, for which the menu was created)"
              required="true"
              parameter="//@microservices.0/@interfaces.1/@operations.0/@parameters.0"/>
        </apiOperationComment>
        <parameters
            name="menuCreated"
            qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu.menuCreated"
            exchangePattern="IN"
            communicationType="ASYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="RestaurantCreated"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="Restaurant.RestaurantCreated"
              import="//@imports.2"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="RestaurantCreated"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="Restaurant.RestaurantCreated"
              import="//@imports.2"/>
        </parameters>
      </operations>
    </interfaces>
  </microservices>
</intermediate:IntermediateServiceModel>
