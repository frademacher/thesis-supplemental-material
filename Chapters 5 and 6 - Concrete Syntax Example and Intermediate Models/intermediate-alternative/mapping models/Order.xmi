<?xml version="1.0" encoding="ASCII"?>
<intermediate:IntermediateServiceModel
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:intermediate="http://www.fhdo.de/lemma/service/intermediate"
    xmlns:intermediate_1="http://www.fhdo.de/lemma/data/intermediate"
    sourceModelUri="">
  <imports name="OrderServices"
      importUri="file:///intermediate/service models/Order.xmi"
      importTypeName="MICROSERVICES"/>
  <imports name="Java"
      importUri="file:///Java.technology"
      importTypeName="TECHNOLOGY"/>
  <imports name="Kafka"
      importUri="file:///Kafka.technology"
      importTypeName="TECHNOLOGY"/>
  <imports name="Spring"
      importUri="file:///Spring.technology"
      importTypeName="TECHNOLOGY"/>
  <imports name="OrderDomain"
      importUri="file:///intermediate/mapping models/Order/OrderDomain_Order.xmi"
      importTypeName="DATATYPES"/>
  <imports name="Common"
      importUri="file:///intermediate/mapping models/Order/Common_Common.xmi"
      importTypeName="DATATYPES"/>
  <imports name="RestaurantDomain"
      importUri="file:///intermediate/data models/Restaurant.xmi"
      importTypeName="DATATYPES"/>
  <microservices
      sourceModelUri="file:///OrderMappingAlternative/Order.services"
      name="org.example.OrderService"
      qualifiedName="org.example.OrderService"
      type="FUNCTIONAL"
      visibility="ARCHITECTURE"
      effectivelyImplemented="true">
    <technologies
        name="Java"
        import="//@imports.1"/>
    <technologies
        name="Kafka"
        import="//@imports.2"/>
    <technologies
        name="Spring"
        import="//@imports.3"/>
    <protocols
        communicationType="SYNCHRONOUS"
        protocol="rest"
        dataFormat="application/json"/>
    <protocols
        communicationType="ASYNCHRONOUS"
        protocol="kafka"
        dataFormat="binary"/>
    <interfaces
        name="Orders"
        qualifiedName="org.example.OrderService.Orders"
        visibility="ARCHITECTURE"
        hasImplementedOperations="true">
      <endpoints
          communicationType="SYNCHRONOUS"
          protocol="rest"
          dataFormat="application/json"
          technology="//@microservices.0/@technologies.2">
        <addresses>/orders</addresses>
      </endpoints>
      <protocols
          communicationType="SYNCHRONOUS"
          protocol="rest"
          dataFormat="application/json"/>
      <protocols
          communicationType="ASYNCHRONOUS"
          protocol="kafka"
          dataFormat="binary"/>
      <operations
          name="create"
          qualifiedName="org.example.OrderService.Orders.create"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Create order">
          <parameterComments
              comment="Request"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.0/@parameters.0"/>
        </apiOperationComment>
        <protocols
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"/>
        <protocols
            communicationType="ASYNCHRONOUS"
            protocol="kafka"
            dataFormat="binary"/>
        <aspects
            name="Post"
            qualifiedName="Spring.Post"
            import="//@imports.3">
          <featureNames>SINGLE_VALUED</featureNames>
        </aspects>
        <parameters
            name="request"
            qualifiedName="org.example.OrderService.Orders.create.request"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderRequest"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderRequest"
              import="//@imports.4"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderRequest"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderRequest"
              import="//@imports.4"/>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.create.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderResponse"
              import="//@imports.4"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="CreateOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.CreateOrderResponse"
              import="//@imports.4"/>
        </parameters>
      </operations>
      <operations
          name="getOrder"
          qualifiedName="org.example.OrderService.Orders.getOrder"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Get order">
          <parameterComments
              comment="ID of the order to retrieve"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.1/@parameters.0"/>
        </apiOperationComment>
        <endpoints
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"
            technology="//@microservices.0/@technologies.2">
          <addresses>/{orderId}</addresses>
        </endpoints>
        <protocols
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"/>
        <protocols
            communicationType="ASYNCHRONOUS"
            protocol="kafka"
            dataFormat="binary"/>
        <aspects
            name="Get"
            qualifiedName="Spring.Get"
            import="//@imports.3">
          <featureNames>SINGLE_VALUED</featureNames>
        </aspects>
        <parameters
            name="orderId"
            qualifiedName="org.example.OrderService.Orders.getOrder.orderId"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType"
              name="Long"
              origin="TECHNOLOGY"
              kind="PRIMITIVE"
              qualifiedName="Java._types.Long"
              import="//@imports.1"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
          <aspects
              name="PathVariable"
              qualifiedName="Spring.PathVariable"
              import="//@imports.3">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.getOrder.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.4"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.4"/>
          <aspects
              name="ResponseEntity"
              qualifiedName="Spring.ResponseEntity"
              import="//@imports.3">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
      </operations>
      <operations
          name="cancel"
          qualifiedName="org.example.OrderService.Orders.cancel"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Cancel order">
          <parameterComments
              comment="ID of the order to cancel"
              required="true"
              parameter="//@microservices.0/@interfaces.0/@operations.2/@parameters.0"/>
        </apiOperationComment>
        <endpoints
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"
            technology="//@microservices.0/@technologies.2">
          <addresses>/{orderId}/cancel</addresses>
        </endpoints>
        <protocols
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"/>
        <protocols
            communicationType="ASYNCHRONOUS"
            protocol="kafka"
            dataFormat="binary"/>
        <aspects
            name="Post"
            qualifiedName="Spring.Post"
            import="//@imports.3">
          <featureNames>SINGLE_VALUED</featureNames>
        </aspects>
        <parameters
            name="orderId"
            qualifiedName="org.example.OrderService.Orders.cancel.orderId"
            exchangePattern="IN"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType"
              name="Long"
              origin="TECHNOLOGY"
              kind="PRIMITIVE"
              qualifiedName="Java._types.Long"
              import="//@imports.1"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="long"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="64"/>
          <aspects
              name="PathVariable"
              qualifiedName="Spring.PathVariable"
              import="//@imports.3">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
        <parameters
            name="response"
            qualifiedName="org.example.OrderService.Orders.cancel.response"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.4"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="GetOrderResponse"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="API.GetOrderResponse"
              import="//@imports.4"/>
          <aspects
              name="ResponseEntity"
              qualifiedName="Spring.ResponseEntity"
              import="//@imports.3">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
        <parameters
            name="notFound"
            qualifiedName="org.example.OrderService.Orders.cancel.notFound"
            exchangePattern="OUT"
            communicationType="SYNCHRONOUS"
            communicatesFault="true">
          <type
              xsi:type="intermediate_1:IntermediateImportedTechnologySpecificType"
              name="Integer"
              origin="TECHNOLOGY"
              kind="PRIMITIVE"
              qualifiedName="Java._types.Integer"
              import="//@imports.1"/>
          <originalType
              xsi:type="intermediate_1:IntermediatePrimitiveType"
              name="int"
              origin="BUILTIN"
              kind="PRIMITIVE"
              size="32"/>
          <aspects
              name="HttpNotFound"
              qualifiedName="Spring.HttpNotFound"
              import="//@imports.3">
            <featureNames>SINGLE_VALUED</featureNames>
          </aspects>
        </parameters>
      </operations>
    </interfaces>
    <interfaces
        name="OrderEventConsumer"
        qualifiedName="org.example.OrderService.OrderEventConsumer"
        visibility="ARCHITECTURE"
        hasImplementedOperations="true">
      <protocols
          communicationType="SYNCHRONOUS"
          protocol="rest"
          dataFormat="application/json"/>
      <protocols
          communicationType="ASYNCHRONOUS"
          protocol="kafka"
          dataFormat="binary"/>
      <operations
          name="listenCreateMenu"
          qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu"
          visibility="ARCHITECTURE">
        <apiOperationComment
            comment="Listen for a menu to be created">
          <parameterComments
              comment="Menu was created (uses RestaurantCreated as its envelope to also get the name of the restaurant, for which the menu was created)"
              required="true"
              parameter="//@microservices.0/@interfaces.1/@operations.0/@parameters.0"/>
        </apiOperationComment>
        <protocols
            communicationType="SYNCHRONOUS"
            protocol="rest"
            dataFormat="application/json"/>
        <protocols
            communicationType="ASYNCHRONOUS"
            protocol="kafka"
            dataFormat="binary"/>
        <aspects
            name="KafkaListener"
            qualifiedName="Kafka.KafkaListener"
            import="//@imports.2">
          <featureNames>SINGLE_VALUED</featureNames>
          <properties
              name="group"
              type="string"/>
          <properties
              name="topic"
              type="string"/>
          <propertyValues
              value="ftgo"
              property="//@microservices.0/@interfaces.1/@operations.0/@aspects.0/@properties.0"/>
          <propertyValues
              value="ftgoTopic"
              property="//@microservices.0/@interfaces.1/@operations.0/@aspects.0/@properties.1"/>
        </aspects>
        <parameters
            name="menuCreated"
            qualifiedName="org.example.OrderService.OrderEventConsumer.listenCreateMenu.menuCreated"
            exchangePattern="IN"
            communicationType="ASYNCHRONOUS">
          <type
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="RestaurantCreated"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="Restaurant.RestaurantCreated"
              import="//@imports.6"/>
          <originalType
              xsi:type="intermediate_1:IntermediateImportedComplexType"
              name="RestaurantCreated"
              origin="DATA_MODEL"
              kind="STRUCTURE"
              qualifiedName="Restaurant.RestaurantCreated"
              import="//@imports.6"/>
        </parameters>
      </operations>
    </interfaces>
    <aspects
        name="BootstrapAddress"
        qualifiedName="Kafka.BootstrapAddress"
        import="//@imports.2">
      <featureNames>SINGLE_VALUED</featureNames>
      <properties
          name="address"
          type="string">
        <featureNames>MANDATORY</featureNames>
      </properties>
      <propertyValues
          value="localhost:9092"
          property="//@microservices.0/@aspects.0/@properties.0"/>
    </aspects>
  </microservices>
</intermediate:IntermediateServiceModel>
