technology Spring {
    protocols {
        sync rest data formats "application/json" default with format "application/json";
    }

    service aspects {
        aspect Application<singleval> for microservices {
            string name;
            int port;
        }
        aspect CrudRepository for types;
        aspect Transactional<singleval> for types;
        aspect Post<singleval> for operations {
            selector(protocol = rest);
        }
        aspect Put<singleval> for operations {
            selector(protocol = rest);
        }
        aspect Delete<singleval> for operations {
            selector(protocol = rest);
        }
        aspect Patch<singleval> for operations {
            selector(protocol = rest);
        }
        aspect Get<singleval> for operations {
            selector(protocol = rest);
        }
        aspect PathVariable<singleval> for parameters {
            selector(protocol = rest, exchange_pattern = in);
        }
        aspect ResponseEntity<singleval> for parameters {
            selector(protocol = rest, exchange_pattern = out);
        }
        aspect RequestBody for parameters {
            selector(exchange_pattern = in);
        }
        aspect ResponseStatus for parameters {
            selector(exchange_pattern = out);
            string status <mandatory>;
        }
        aspect Valid for parameters;
    }
}